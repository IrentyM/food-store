syntax = "proto3";

option go_package = ".;orderproto";

package orderproto;

service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (OrderResponse);
  rpc GetOrderByID(GetOrderRequest) returns (OrderResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (OrderResponse);
  rpc ListUserOrders(ListOrdersRequest) returns (ListOrdersResponse);
}

message CreateOrderRequest {
  int32 user_id = 1;
  string status = 2;
  string payment_status = 3;
  double total_amount = 4;
  repeated OrderItemRequest items = 5;
}

message OrderItemRequest {
  int32 product_id = 1;
  int32 quantity = 2;
  double price_at_purchase = 3;
}

message GetOrderRequest {
  int32 id = 1;
}

message UpdateOrderStatusRequest {
  int32 id = 1;
  string status = 2;
  string payment_status = 3;
}

message ListOrdersRequest {
  int32 user_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message OrderResponse {
  int32 id = 1;
  int32 user_id = 2;
  string status = 3;
  string payment_status = 4;
  double total_amount = 5;
  string created_at = 6;
  string updated_at = 7;
  repeated OrderItemResponse items = 8;
}

message OrderItemResponse {
  int32 id = 1;
  int32 product_id = 2;
  int32 quantity = 3;
  double price_at_purchase = 4;
}

message ListOrdersResponse {
  repeated OrderResponse orders = 1;
  int32 total = 2;
}

message Empty {}